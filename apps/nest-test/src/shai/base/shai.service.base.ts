/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Shai as PrismaShai } from "@prisma/client";

export class ShaiServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ShaiCountArgs, "select">): Promise<number> {
    return this.prisma.shai.count(args);
  }

  async shais(args: Prisma.ShaiFindManyArgs): Promise<PrismaShai[]> {
    return this.prisma.shai.findMany(args);
  }
  async shai(args: Prisma.ShaiFindUniqueArgs): Promise<PrismaShai | null> {
    return this.prisma.shai.findUnique(args);
  }
  async createShai(args: Prisma.ShaiCreateArgs): Promise<PrismaShai> {
    return this.prisma.shai.create(args);
  }
  async updateShai(args: Prisma.ShaiUpdateArgs): Promise<PrismaShai> {
    return this.prisma.shai.update(args);
  }
  async deleteShai(args: Prisma.ShaiDeleteArgs): Promise<PrismaShai> {
    return this.prisma.shai.delete(args);
  }
}
